{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive\\\\\\uBB38\\uC11C\\\\lessee\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport FileUpload from './components/FileUpload';\nimport AlgorithmSelect from './components/AlgorithmSelect';\nimport CompressionStats from './components/CompressionStats';\nimport AlgorithmInfo from './components/AlgorithmInfo';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [algorithm, setAlgorithm] = useState('gzip');\n  const [stats, setStats] = useState(null);\n  const [downloadFileName, setDownloadFileName] = useState('');\n  const [mode, setMode] = useState('compress');\n  const [processing, setProcessing] = useState(false);\n  const [error, setError] = useState('');\n  const handleProcess = async () => {\n    if (!file) {\n      alert('Please select a file first');\n      return;\n    }\n    setProcessing(true);\n    setStats(null);\n    setDownloadFileName('');\n    setError('');\n    const formData = new FormData();\n    formData.append('file', file);\n    if (mode === 'compress') {\n      formData.append('algorithm', algorithm);\n    }\n    const endpoint = mode === 'compress' ? 'compress' : 'decompress';\n    try {\n      const response = await fetch(`http://localhost:5000/api/${endpoint}`, {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      if (response.ok && data.success) {\n        setStats(data);\n        setDownloadFileName(data.downloadFileName);\n      } else {\n        setError(data.error || 'Processing failed');\n      }\n    } catch (error) {\n      setError(`Connection failed: ${error.message}`);\n    }\n    setProcessing(false);\n  };\n  const handleDownload = () => {\n    if (!downloadFileName) return;\n    window.open(`http://localhost:5000/api/download?file=${downloadFileName}`, '_blank');\n    setDownloadFileName('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center mb-4 text-primary\",\n          children: \"\\uD83D\\uDDDC\\uFE0F Data Compression Portal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-center text-muted mb-4\",\n          children: \"Built-in Node.js Algorithms: GZIP, DEFLATE, BROTLI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-danger\",\n          role: \"alert\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-group mb-4 w-100\",\n          role: \"group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn ${mode === 'compress' ? 'btn-primary' : 'btn-outline-primary'}`,\n            onClick: () => setMode('compress'),\n            disabled: processing,\n            children: \"\\uD83D\\uDCE6 Compress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn ${mode === 'decompress' ? 'btn-primary' : 'btn-outline-primary'}`,\n            onClick: () => setMode('decompress'),\n            disabled: processing,\n            children: \"\\uD83D\\uDCC2 Decompress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), mode === 'compress' && /*#__PURE__*/_jsxDEV(AlgorithmSelect, {\n          algorithm: algorithm,\n          setAlgorithm: setAlgorithm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AlgorithmInfo, {\n          algorithm: mode === 'compress' ? algorithm : 'auto'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n          setFile: setFile,\n          file: file,\n          mode: mode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-grid mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-warning btn-lg\",\n            onClick: handleProcess,\n            disabled: processing || !file,\n            children: processing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"spinner-border spinner-border-sm me-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this), \"Processing...\"]\n            }, void 0, true) : `🚀 ${mode === 'compress' ? 'Compress' : 'Decompress'} File`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), stats && /*#__PURE__*/_jsxDEV(CompressionStats, {\n          stats: stats\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), downloadFileName && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-grid mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success btn-lg\",\n            onClick: handleDownload,\n            children: [\"\\uD83D\\uDCE5 Download \", mode === 'compress' ? 'Compressed' : 'Decompressed', \" File\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Erhzvl2Ty0i21amuazVXRTVMzrI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","FileUpload","AlgorithmSelect","CompressionStats","AlgorithmInfo","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","file","setFile","algorithm","setAlgorithm","stats","setStats","downloadFileName","setDownloadFileName","mode","setMode","processing","setProcessing","error","setError","handleProcess","alert","formData","FormData","append","endpoint","response","fetch","method","body","data","json","ok","success","message","handleDownload","window","open","className","children","fileName","_jsxFileName","lineNumber","columnNumber","role","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/hp/OneDrive/문서/lessee/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport FileUpload from './components/FileUpload';\r\nimport AlgorithmSelect from './components/AlgorithmSelect';\r\nimport CompressionStats from './components/CompressionStats';\r\nimport AlgorithmInfo from './components/AlgorithmInfo';\r\n\r\nfunction App() {\r\n  const [file, setFile] = useState(null);\r\n  const [algorithm, setAlgorithm] = useState('gzip');\r\n  const [stats, setStats] = useState(null);\r\n  const [downloadFileName, setDownloadFileName] = useState('');\r\n  const [mode, setMode] = useState('compress');\r\n  const [processing, setProcessing] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleProcess = async () => {\r\n    if (!file) {\r\n      alert('Please select a file first');\r\n      return;\r\n    }\r\n    \r\n    setProcessing(true);\r\n    setStats(null);\r\n    setDownloadFileName('');\r\n    setError('');\r\n    \r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    if (mode === 'compress') {\r\n      formData.append('algorithm', algorithm);\r\n    }\r\n    \r\n    const endpoint = mode === 'compress' ? 'compress' : 'decompress';\r\n    \r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/${endpoint}`, {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (response.ok && data.success) {\r\n        setStats(data);\r\n        setDownloadFileName(data.downloadFileName);\r\n      } else {\r\n        setError(data.error || 'Processing failed');\r\n      }\r\n    } catch (error) {\r\n      setError(`Connection failed: ${error.message}`);\r\n    }\r\n    \r\n    setProcessing(false);\r\n  };\r\n\r\n  const handleDownload = () => {\r\n    if (!downloadFileName) return;\r\n    window.open(`http://localhost:5000/api/download?file=${downloadFileName}`, '_blank');\r\n    setDownloadFileName('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-md-8\">\r\n          <h1 className=\"text-center mb-4 text-primary\">\r\n            🗜️ Data Compression Portal\r\n          </h1>\r\n          <p className=\"text-center text-muted mb-4\">\r\n            Built-in Node.js Algorithms: GZIP, DEFLATE, BROTLI\r\n          </p>\r\n          \r\n          {error && (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n              {error}\r\n            </div>\r\n          )}\r\n          \r\n          {/* Mode Selection */}\r\n          <div className=\"btn-group mb-4 w-100\" role=\"group\">\r\n            <button\r\n              className={`btn ${mode === 'compress' ? 'btn-primary' : 'btn-outline-primary'}`}\r\n              onClick={() => setMode('compress')}\r\n              disabled={processing}\r\n            >\r\n              📦 Compress\r\n            </button>\r\n            <button\r\n              className={`btn ${mode === 'decompress' ? 'btn-primary' : 'btn-outline-primary'}`}\r\n              onClick={() => setMode('decompress')}\r\n              disabled={processing}\r\n            >\r\n              📂 Decompress\r\n            </button>\r\n          </div>\r\n          \r\n          {/* Algorithm Selection (only for compression) */}\r\n          {mode === 'compress' && (\r\n            <AlgorithmSelect algorithm={algorithm} setAlgorithm={setAlgorithm} />\r\n          )}\r\n          \r\n          <AlgorithmInfo algorithm={mode === 'compress' ? algorithm : 'auto'} />\r\n          <FileUpload setFile={setFile} file={file} mode={mode} />\r\n          \r\n          {/* Process Button */}\r\n          <div className=\"d-grid mb-4\">\r\n            <button\r\n              className=\"btn btn-warning btn-lg\"\r\n              onClick={handleProcess}\r\n              disabled={processing || !file}\r\n            >\r\n              {processing ? (\r\n                <>\r\n                  <span className=\"spinner-border spinner-border-sm me-2\" />\r\n                  Processing...\r\n                </>\r\n              ) : (\r\n                `🚀 ${mode === 'compress' ? 'Compress' : 'Decompress'} File`\r\n              )}\r\n            </button>\r\n          </div>\r\n          \r\n          {/* Stats Display */}\r\n          {stats && <CompressionStats stats={stats} />}\r\n          \r\n          {/* Download Button */}\r\n          {downloadFileName && (\r\n            <div className=\"d-grid mb-4\">\r\n              <button\r\n                className=\"btn btn-success btn-lg\"\r\n                onClick={handleDownload}\r\n              >\r\n                📥 Download {mode === 'compress' ? 'Compressed' : 'Decompressed'} File\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}