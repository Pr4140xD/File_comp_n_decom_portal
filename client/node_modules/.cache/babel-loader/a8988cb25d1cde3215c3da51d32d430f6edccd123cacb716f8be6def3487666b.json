{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\File_comp_n_decom_portal-main\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport FileUpload from './components/FileUpload';\nimport AlgorithmSelect from './components/AlgorithmSelect';\nimport CompressionStats from './components/CompressionStats';\nimport AlgorithmInfo from './components/AlgorithmInfo';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [algorithm, setAlgorithm] = useState('gzip');\n  const [stats, setStats] = useState(null);\n  const [downloadFileName, setDownloadFileName] = useState('');\n  const [mode, setMode] = useState('compress');\n  const [processing, setProcessing] = useState(false);\n  const [error, setError] = useState('');\n  const handleProcess = async () => {\n    if (!file) {\n      alert('Please select a file first');\n      return;\n    }\n    setProcessing(true);\n    setStats(null);\n    setDownloadFileName('');\n    setError('');\n    const formData = new FormData();\n    formData.append('file', file);\n    if (mode === 'compress') {\n      formData.append('algorithm', algorithm);\n    }\n    const endpoint = mode === 'compress' ? 'compress' : 'decompress';\n    try {\n      const response = await fetch(`http://localhost:5000/api/${endpoint}`, {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      if (response.ok && data.success) {\n        setStats(data);\n        setDownloadFileName(data.downloadFileName); // <-- Use exactly what backend returns!\n      } else {\n        setError(data.error || 'Processing failed');\n      }\n    } catch (error) {\n      setError(`Connection failed: ${error.message}`);\n    }\n    setProcessing(false);\n  };\n  const handleDownload = () => {\n    if (!downloadFileName) return;\n    window.open(`http://localhost:5000/api/download?file=${encodeURIComponent(downloadFileName)}`, '_blank');\n    setDownloadFileName('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center mb-4 text-primary\",\n          children: \"\\uD83D\\uDDDC\\uFE0F Data Compression Portal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-center text-muted mb-4\",\n          children: \"Built-in Node.js Algorithms: GZIP, DEFLATE, BROTLI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-danger\",\n          role: \"alert\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-group mb-4 w-100\",\n          role: \"group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn ${mode === 'compress' ? 'btn-primary' : 'btn-outline-primary'}`,\n            onClick: () => setMode('compress'),\n            disabled: processing,\n            children: \"\\uD83D\\uDCE6 Compress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn ${mode === 'decompress' ? 'btn-primary' : 'btn-outline-primary'}`,\n            onClick: () => setMode('decompress'),\n            disabled: processing,\n            children: \"\\uD83D\\uDCC2 Decompress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), mode === 'compress' && /*#__PURE__*/_jsxDEV(AlgorithmSelect, {\n          algorithm: algorithm,\n          setAlgorithm: setAlgorithm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AlgorithmInfo, {\n          algorithm: mode === 'compress' ? algorithm : 'auto'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n          setFile: setFile,\n          file: file,\n          mode: mode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-grid mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-warning btn-lg\",\n            onClick: handleProcess,\n            disabled: processing || !file,\n            children: processing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"spinner-border spinner-border-sm me-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this), \"Processing...\"]\n            }, void 0, true) : `🚀 ${mode === 'compress' ? 'Compress' : 'Decompress'} File`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), stats && /*#__PURE__*/_jsxDEV(CompressionStats, {\n          stats: stats\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), downloadFileName && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-grid mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success btn-lg\",\n            onClick: handleDownload,\n            children: [\"\\uD83D\\uDCE5 Download \", mode === 'compress' ? 'Compressed' : 'Decompressed', \" File\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Erhzvl2Ty0i21amuazVXRTVMzrI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","FileUpload","AlgorithmSelect","CompressionStats","AlgorithmInfo","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","file","setFile","algorithm","setAlgorithm","stats","setStats","downloadFileName","setDownloadFileName","mode","setMode","processing","setProcessing","error","setError","handleProcess","alert","formData","FormData","append","endpoint","response","fetch","method","body","data","json","ok","success","message","handleDownload","window","open","encodeURIComponent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","role","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/hp/Downloads/File_comp_n_decom_portal-main/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport FileUpload from './components/FileUpload';\nimport AlgorithmSelect from './components/AlgorithmSelect';\nimport CompressionStats from './components/CompressionStats';\nimport AlgorithmInfo from './components/AlgorithmInfo';\n\nfunction App() {\n  const [file, setFile] = useState(null);\n  const [algorithm, setAlgorithm] = useState('gzip');\n  const [stats, setStats] = useState(null);\n  const [downloadFileName, setDownloadFileName] = useState('');\n  const [mode, setMode] = useState('compress');\n  const [processing, setProcessing] = useState(false);\n  const [error, setError] = useState('');\n\n  const handleProcess = async () => {\n    if (!file) {\n      alert('Please select a file first');\n      return;\n    }\n    setProcessing(true);\n    setStats(null);\n    setDownloadFileName('');\n    setError('');\n    const formData = new FormData();\n    formData.append('file', file);\n    if (mode === 'compress') {\n      formData.append('algorithm', algorithm);\n    }\n    const endpoint = mode === 'compress' ? 'compress' : 'decompress';\n    try {\n      const response = await fetch(`http://localhost:5000/api/${endpoint}`, {\n        method: 'POST',\n        body: formData,\n      });\n      const data = await response.json();\n      if (response.ok && data.success) {\n        setStats(data);\n        setDownloadFileName(data.downloadFileName); // <-- Use exactly what backend returns!\n      } else {\n        setError(data.error || 'Processing failed');\n      }\n    } catch (error) {\n      setError(`Connection failed: ${error.message}`);\n    }\n    setProcessing(false);\n  };\n\n  const handleDownload = () => {\n    if (!downloadFileName) return;\n    window.open(`http://localhost:5000/api/download?file=${encodeURIComponent(downloadFileName)}`, '_blank');\n    setDownloadFileName('');\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-md-8\">\n          <h1 className=\"text-center mb-4 text-primary\">\n            🗜️ Data Compression Portal\n          </h1>\n          <p className=\"text-center text-muted mb-4\">\n            Built-in Node.js Algorithms: GZIP, DEFLATE, BROTLI\n          </p>\n          {error && (\n            <div className=\"alert alert-danger\" role=\"alert\">\n              {error}\n            </div>\n          )}\n          <div className=\"btn-group mb-4 w-100\" role=\"group\">\n            <button\n              className={`btn ${mode === 'compress' ? 'btn-primary' : 'btn-outline-primary'}`}\n              onClick={() => setMode('compress')}\n              disabled={processing}\n            >\n              📦 Compress\n            </button>\n            <button\n              className={`btn ${mode === 'decompress' ? 'btn-primary' : 'btn-outline-primary'}`}\n              onClick={() => setMode('decompress')}\n              disabled={processing}\n            >\n              📂 Decompress\n            </button>\n          </div>\n          {mode === 'compress' && (\n            <AlgorithmSelect algorithm={algorithm} setAlgorithm={setAlgorithm} />\n          )}\n          <AlgorithmInfo algorithm={mode === 'compress' ? algorithm : 'auto'} />\n          <FileUpload setFile={setFile} file={file} mode={mode} />\n          <div className=\"d-grid mb-4\">\n            <button\n              className=\"btn btn-warning btn-lg\"\n              onClick={handleProcess}\n              disabled={processing || !file}\n            >\n              {processing ? (\n                <>\n                  <span className=\"spinner-border spinner-border-sm me-2\" />\n                  Processing...\n                </>\n              ) : (\n                `🚀 ${mode === 'compress' ? 'Compress' : 'Decompress'} File`\n              )}\n            </button>\n          </div>\n          {stats && <CompressionStats stats={stats} />}\n          {downloadFileName && (\n            <div className=\"d-grid mb-4\">\n              <button\n                className=\"btn btn-success btn-lg\"\n                onClick={handleDownload}\n              >\n                📥 Download {mode === 'compress' ? 'Compressed' : 'Decompressed'} File\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}